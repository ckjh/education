# Generated by Django 2.2.2 on 2019-09-26 09:19

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        # ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('email', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=255)),
                ('img', models.CharField(default='', max_length=255)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('integral', models.IntegerField(default=0)),
                ('invitation_code', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Act',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('title', models.CharField(default='', max_length=40, verbose_name='标题')),
                ('date', models.DateTimeField(verbose_name='活动时间定为到天')),
            ],
            options={
                'db_table': 'act',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('username', models.CharField(max_length=100, verbose_name='管理用户名')),
                ('password', models.CharField(max_length=200, verbose_name='管理用户密码')),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=15, verbose_name='优惠券名称')),
                ('count', models.IntegerField(verbose_name='优惠券数量')),
                ('type', models.IntegerField(verbose_name='优惠券类型')),
                ('course', models.IntegerField(verbose_name='类型为3时指定课程')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='会员开始时间')),
                ('end_time', models.DateTimeField(auto_now=True, verbose_name='会员结束时间')),
                ('status', models.IntegerField(verbose_name='使用状态')),
                ('condition', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='满多少钱可以使用')),
                ('money', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='优惠券金额')),
            ],
            options={
                'db_table': 'coupon',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=50, verbose_name='课程标题')),
                ('pic', models.CharField(max_length=255, verbose_name='课程图片')),
                ('info', models.CharField(max_length=50, verbose_name='课程简介')),
                ('online', models.IntegerField(default=1, verbose_name='是否上线')),
                ('member', models.IntegerField(default=1, verbose_name='是否会员')),
                ('attention', models.IntegerField(verbose_name='关注量')),
                ('learn', models.IntegerField(verbose_name='学过人数')),
                ('comment_num', models.IntegerField(verbose_name='评论数')),
                ('recommand', models.CharField(max_length=50, verbose_name='推荐课程')),
                ('detail', models.CharField(max_length=50, verbose_name='课程详情')),
                ('section_num', models.IntegerField(verbose_name='章节数')),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('pic', models.CharField(max_length=255)),
                ('info', models.CharField(max_length=255)),
                ('study_num', models.IntegerField()),
            ],
            options={
                'db_table': 'path',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=250)),
                ('pic', models.CharField(max_length=250)),
                ('type', models.IntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=40, verbose_name='资源名')),
                ('url', models.CharField(max_length=100, verbose_name='资源地址')),
                ('status', models.IntegerField(default=1, verbose_name='状态0停用1启用')),
            ],
            options={
                'db_table': 'resources',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=49, verbose_name='名称')),
                ('status', models.IntegerField(default=0, verbose_name='是否启用')),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('section', models.CharField(max_length=50, verbose_name='课程章节名称')),
                ('video', models.CharField(max_length=50, verbose_name='视频连接')),
                ('sort', models.IntegerField(verbose_name='排序')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Course')),
            ],
            options={
                'db_table': 'section',
            },
        ),
        migrations.CreateModel(
            name='SiteMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'sitemessage',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=50, verbose_name='标签名称')),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('desc', models.CharField(max_length=255)),
                ('pic', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'teacher',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
            ],
            options={
                'db_table': 'time',
            },
        ),
        migrations.CreateModel(
            name='Usercoupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('count', models.IntegerField(verbose_name='优惠券唯一编码')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='优惠券开始时间')),
                ('end_time', models.DateTimeField(auto_now=True, verbose_name='优惠券结束时间')),
                ('money', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='优惠券金额')),
                ('condition', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='满多少钱可以使用')),
                ('is_use', models.IntegerField(verbose_name='是否使用')),
            ],
            options={
                'db_table': 'usercoupon',
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'userlevel',
            },
        ),
        migrations.CreateModel(
            name='WorkOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('problem', models.CharField(max_length=250)),
                ('content', models.CharField(max_length=250)),
                ('pid', models.IntegerField(default=0)),
                ('status', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Teacher')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userteacher',
            },
        ),
        migrations.CreateModel(
            name='UserSiteMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('type', models.IntegerField(default=0)),
                ('status', models.IntegerField(default=0)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.SiteMessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'usersitemessage',
            },
        ),
        migrations.CreateModel(
            name='UserPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Path')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userpath',
            },
        ),
        migrations.CreateModel(
            name='UserLevelCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField(default=1)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.UserLevel')),
            ],
            options={
                'db_table': 'userlevelcondition',
            },
        ),
        migrations.CreateModel(
            name='UserCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Course', verbose_name='课程外键')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Section', verbose_name='章节外键')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_course',
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('type', models.IntegerField()),
                ('uid', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'thirdpartylogin',
            },
        ),
        migrations.CreateModel(
            name='Sk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('act', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Act', verbose_name='对应活动表')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Course', verbose_name='对应课程表')),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Time', verbose_name='对应时间表')),
            ],
            options={
                'db_table': 'sk',
            },
        ),
        migrations.CreateModel(
            name='RoleResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('resources', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Resources', verbose_name='资源id')),
                ('roles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Roles', verbose_name='角色id')),
            ],
            options={
                'db_table': 'roleresource',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('report_content', models.CharField(max_length=50, verbose_name='报告内容')),
                ('report_title', models.CharField(max_length=50, verbose_name='报告标题')),
                ('report_browse', models.IntegerField(verbose_name='实验报告浏览量')),
                ('linknum', models.IntegerField(verbose_name='点赞树')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Course', verbose_name='课程ID')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Section', verbose_name='章节ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户ID')),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('type', models.IntegerField(default=1, verbose_name='类型')),
                ('discount', models.FloatField(verbose_name='折扣')),
                ('discoun_price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='折扣后')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Course', verbose_name='课程ID')),
            ],
            options={
                'db_table': 'price',
            },
        ),
        migrations.CreateModel(
            name='PathStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField()),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Path')),
            ],
            options={
                'db_table': 'pathstage',
            },
        ),
        migrations.CreateModel(
            name='OrderRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('order_number', models.CharField(max_length=100)),
                ('pay_type', models.IntegerField(default=0, verbose_name='支付方式01')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='支付价格')),
                ('pay_price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='价实际格')),
                ('preferential_way', models.IntegerField(default=0, verbose_name='优惠方式，0未使用优惠，1使用积分，2使用优惠券')),
                ('preferential_money', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='优惠金额')),
                ('use_type', models.IntegerField(default=0, verbose_name='是否使用优惠券')),
                ('order_status', models.IntegerField(default=0, verbose_name='订单状态')),
                ('code', models.CharField(max_length=100, verbose_name='流水号')),
                ('coupon', models.CharField(max_length=100, verbose_name='如果使用优惠券则填优惠券的码，不使用则为空')),
                ('pay_status', models.IntegerField(default=0, verbose_name='支付状态')),
                ('cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Course', verbose_name='关联课程id')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='关联用户id')),
            ],
            options={
                'db_table': 'orderrecord',
            },
        ),
        migrations.CreateModel(
            name='MemberOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('order_sn', models.CharField(max_length=100)),
                ('time', models.IntegerField(default=1)),
                ('code', models.CharField(max_length=100)),
                ('status', models.IntegerField(default=0)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('pay_type', models.IntegerField()),
                ('invitation_code', models.CharField(default='', max_length=100)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.UserLevel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'memberorder',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField()),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.UserLevel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('dates', models.DateTimeField(auto_now_add=True, verbose_name='执行时间')),
                ('operation', models.CharField(max_length=250)),
                ('result', models.IntegerField(default=1)),
                ('reason', models.CharField(max_length=250)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Admin')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreditsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('x_integral', models.IntegerField(default=1)),
                ('s_integral', models.IntegerField(verbose_name='变化前总积分')),
                ('before_integral', models.IntegerField(verbose_name='本次操作积分')),
                ('end_integral', models.IntegerField(verbose_name='积分兑换用途')),
                ('effect', models.IntegerField(verbose_name='兑换的码')),
                ('coupon_code', models.CharField(max_length=250)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseCollect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_collect',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.PathStage', verbose_name='阶段外键'),
        ),
        migrations.AddField(
            model_name='course',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Tag', verbose_name='标签外键'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Teacher', verbose_name='老师外键'),
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateField(auto_now=True)),
                ('find_id', models.IntegerField(verbose_name='实验问答id/实验ID')),
                ('collect_type', models.IntegerField(default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'collect',
            },
        ),
        migrations.AddField(
            model_name='admin',
            name='roles',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin01.Roles', verbose_name='外键角色id'),
        ),
        migrations.AddField(
            model_name='user',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin01.UserLevel'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
